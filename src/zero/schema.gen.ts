/* eslint-disable */
/* tslint:disable */
// noinspection JSUnusedGlobalSymbols
// biome-ignore-all
/*
 * ------------------------------------------------------------
 * ## This file was automatically generated by drizzle-zero. ##
 * ## Any changes you make to this file will be overwritten. ##
 * ##                                                        ##
 * ## Additionally, you should also exclude this file from   ##
 * ## your linter and/or formatter to prevent it from being  ##
 * ## checked or modified.                                   ##
 * ##                                                        ##
 * ## SOURCE: https://github.com/BriefHQ/drizzle-zero        ##
 * ------------------------------------------------------------
 */

import type { ZeroCustomType } from "drizzle-zero";
import type { default as zeroSchema } from "../../drizzle-zero.config";

/**
 * The Zero schema object.
 * This type is auto-generated from your Drizzle schema definition.
 */
export const schema = {
  tables: {
    chatTrees: {
      name: "chatTrees",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "chatTrees",
            "id"
          >,
        },
        userId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "chatTrees",
            "userId"
          >,
        },
        data: {
          type: "json",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "chatTrees",
            "data"
          >,
        },
      },
      primaryKey: ["id"],
      serverName: "liquachat_chat_tree",
    },
    chats: {
      name: "chats",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "chats",
            "id"
          >,
        },
        title: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "chats",
            "title"
          >,
        },
        public: {
          type: "boolean",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "chats",
            "public"
          >,
        },
        userId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "chats",
            "userId"
          >,
        },
        createdAt: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "chats",
            "createdAt"
          >,
        },
        updatedAt: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "chats",
            "updatedAt"
          >,
        },
      },
      primaryKey: ["id"],
      serverName: "liquachat_chat",
    },
    messages: {
      name: "messages",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "messages",
            "id"
          >,
        },
        chatId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "messages",
            "chatId"
          >,
        },
        userId: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "messages",
            "userId"
          >,
        },
        role: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "messages",
            "role"
          >,
        },
        content: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "messages",
            "content"
          >,
        },
        status: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "messages",
            "status"
          >,
        },
        createdAt: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "messages",
            "createdAt"
          >,
        },
      },
      primaryKey: ["id"],
      serverName: "liquachat_message",
    },
    users: {
      name: "users",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "users",
            "id"
          >,
        },
        name: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "users",
            "name"
          >,
        },
        email: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "users",
            "email"
          >,
        },
        emailVerified: {
          type: "boolean",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "users",
            "emailVerified"
          >,
        },
        image: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "users",
            "image"
          >,
        },
        isAnonymous: {
          type: "boolean",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "users",
            "isAnonymous"
          >,
        },
        createdAt: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "users",
            "createdAt"
          >,
        },
        updatedAt: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "users",
            "updatedAt"
          >,
        },
      },
      primaryKey: ["id"],
      serverName: "liquachat_user",
    },
  },
  relationships: {
    chatTrees: {
      user: [
        {
          sourceField: ["userId"],
          destField: ["id"],
          destSchema: "users",
          cardinality: "one",
        },
      ],
    },
    chats: {
      messages: [
        {
          sourceField: ["id"],
          destField: ["chatId"],
          destSchema: "messages",
          cardinality: "many",
        },
      ],
    },
    messages: {
      chat: [
        {
          sourceField: ["chatId"],
          destField: ["id"],
          destSchema: "chats",
          cardinality: "one",
        },
      ],
    },
    users: {
      chatTrees: [
        {
          sourceField: ["id"],
          destField: ["userId"],
          destSchema: "chatTrees",
          cardinality: "many",
        },
      ],
    },
  },
} as const;

/**
 * Represents the Zero schema type.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type Schema = typeof schema;
